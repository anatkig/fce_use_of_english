{"version":3,"sources":["components/form/Rename.tsx","components/form/NameForm.tsx","components/initial_box/InitialBox.tsx","data/dummies.tsx","components/you_player_box/YouPlayerBox.tsx","components/timer/Timer.tsx","data/tasks.tsx","components/task_itself/TaskItself.tsx","components/task_box/TaskBox.tsx","components/battle_result_box/BattleResultBox.tsx","components/your_statistics/Statistics.tsx","components/main_container/MainContainer.tsx","components/header/Header.tsx","App.tsx","reportWebVitals.tsx","index.tsx"],"names":["Rename","props","Button","onClick","setChangeName","className","NameForm","useState","state","setState","Form","onSubmit","event","preventDefault","localStorage","setItem","setIsName","style","marginTop","marginBottom","Group","controlId","Control","type","placeholder","value","onChange","e","target","InitialBox","turn","playerName","setPlayerName","isName","changeName","useEffect","name","getItem","Container","Row","set","to","dummies","YouPlayerBox","store","useContext","Context","setDummie","Math","floor","random","length","width","color","dummie","Timer","time","setTime","inter","setInterval","prev","clearInterval","padStart","tasks","title","html","correctAnswers","TaskItself","task","setTask","Array","fill","focus","setFocus","inputValues","setInputValues","setDummieScore","Label","fontWeight","map","input","index","Col","focusArr","slice","element","handleChange","autoFocus","Date","getTime","variant","setCorrectAnswersNumber","reduce","correctAnswersNumber","currectElement","yourName","lsRaw","statistics","JSON","parse","person","includes","push","dummieScore","findIndex","stringify","TaskBox","num","BattleResultBox","Table","striped","bordered","hover","Statistics","people","setPeople","sort","a","b","React","createContext","MainContainer","path","Provider","switcher","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"uQAmBeA,EAfA,SAACC,GACd,OACE,mCACE,cAACC,EAAA,EAAD,CACEC,QAAS,WACPF,EAAMG,eAAc,IAEtBC,UAAU,gBAJZ,4B,QC6BSC,EA/BE,SAACL,GAAiB,IAAD,EACNM,mBAAS,IADH,mBACzBC,EADyB,KAClBC,EADkB,KAWhC,OACE,mCACE,eAACC,EAAA,EAAD,CACEC,SAXe,SAACC,GACpBA,EAAMC,iBACNC,aAAaC,QAAQ,OAAQP,GAC7BP,EAAMe,WAAU,GAChBf,EAAMG,eAAc,GACpBK,EAAS,KAOLQ,MAAO,CAAEC,UAAW,KAAMC,aAAc,MAF1C,UAIE,cAACT,EAAA,EAAKU,MAAN,CAAYC,UAAU,gBAAgBhB,UAAU,OAAhD,SACE,cAACK,EAAA,EAAKY,QAAN,CACEC,KAAK,OACLC,YAAY,sBACZC,MAAOjB,EACPkB,SAAU,SAACC,GAAD,OAAOlB,EAASkB,EAAEC,OAAOH,YAGvC,cAACvB,EAAA,EAAD,CAAQqB,KAAK,SAAb,0B,gBCgBOM,EAvCI,SAACC,GAAgB,IAAD,EACGvB,qBADH,mBAC1BwB,EAD0B,KACdC,EADc,OAELzB,oBAAS,GAFJ,mBAE1B0B,EAF0B,KAElBjB,EAFkB,OAGGT,oBAAS,GAHZ,mBAG1B2B,EAH0B,KAGd9B,EAHc,KAYjC,OAPA+B,qBAAU,WACR,IAAMC,EAAOtB,aAAauB,QAAQ,QAClCL,EAAcI,GACVA,GAAMpB,GAAU,GAChBkB,GAAYlB,GAAU,KACzB,CAACkB,IAGF,mCACE,eAACI,EAAA,EAAD,CAAWjC,UAAU,MAArB,UACG4B,EACC,2CAAcF,EAAd,OAEA,cAACQ,EAAA,EAAD,CAAKlC,UAAU,aAAf,SACE,cAAC,EAAD,CAAUW,UAAWA,EAAWZ,cAAeA,MAInD,cAACmC,EAAA,EAAD,CAAKlC,UAAU,aAAf,SACE,cAACH,EAAA,EAAD,CAAQC,QAAS,kBAAM2B,EAAKU,IAAI,IAAInC,UAAU,eAA9C,0BAIF,eAACkC,EAAA,EAAD,CAAKlC,UAAU,aAAf,UACG4B,GAAU,cAAC,EAAD,CAAQ7B,cAAeA,IAClC,cAAC,gBAAD,CAAeqC,GAAG,cAAlB,SACE,cAACvC,EAAA,EAAD,CAAQG,UAAU,gBAAlB,mCCtCCqC,EAAU,CACrB,QACA,QACA,OACA,WACA,YACA,WACA,QACA,SCcaC,EAlBM,WACnB,IAAMC,EAAQC,qBAAWC,GAKzB,OAHAX,qBAAU,WACRS,EAAMG,UAAUL,EAAQM,KAAKC,MAAMD,KAAKE,SAAWR,EAAQS,YAC1D,CAACP,IAEF,qBAAK3B,MAAO,CAAEmC,MAAO,QAArB,SACE,qBAAInC,MAAO,CAAEoC,MAAO,SAApB,oCAC0B,IACxB,4BACE,iCAAST,EAAMU,iB,QCUVC,EAtBD,SAAC,GAAmB,IAAjBf,EAAgB,EAAhBA,IAAgB,EACPjC,mBAAS,KADF,mBACxBiD,EADwB,KAClBC,EADkB,KAa/B,OAVAtB,qBAAU,WACR,IAIMuB,EAAwBC,aAAY,WAHxCF,GAAQ,SAACG,GAAD,OAAUA,EAAO,OAGmC,KAE9D,OADa,IAATJ,GAAYhB,EAAI,GACb,kBAAMqB,cAAcH,MAC1B,CAACF,EAAMhB,IAGR,6BACG,UAAGQ,KAAKC,MAAMO,EAAO,KAAMM,SAAS,EAAG,KACtC,IACA,UAAGd,KAAKC,MAAMO,EAAO,KAAMM,SAAS,EAAG,Q,QCpBlCC,EAAQ,CACnB,CACEC,MAAO,4DACPC,KAAK,6kCAkBLC,eAAgB,CAAC,MAAO,KAAM,OAAQ,MAAO,MAAO,OAAQ,QAAS,OAEvE,CACEF,MAAO,kDACPC,KAAK,+oCAiBLC,eAAgB,CACd,MACA,KACA,OACA,KACA,KACA,OACA,QACA,YC6DSC,EAzGI,SAAC,GAAmB,IAAjB3B,EAAgB,EAAhBA,IAAgB,EACZjC,qBADY,mBAC7B6D,EAD6B,KACvBC,EADuB,OAEV9D,mBAAQ,YAAgB,IAAI+D,MAAM,GAAGC,MAAK,KAFhC,mBAE7BC,EAF6B,KAEtBC,EAFsB,OAGElE,mBAAQ,YACzC,IAAI+D,MAAM,GAAGC,KAAK,MAJa,mBAG7BG,EAH6B,KAGhBC,EAHgB,KAM9B/B,EAAQC,qBAAWC,GAEzBX,qBAAU,WACRkC,EAAQN,EAAMf,KAAKC,MAAMD,KAAKE,SAAWa,EAAMZ,UAC/CP,EAAMgC,eAAe,CAAC5B,KAAKC,MAAsB,EAAhBD,KAAKE,cAErC,IA0DH,OACE,eAACZ,EAAA,EAAD,WACE,sBAAKjC,UAAU,sBAAf,iBACG+D,QADH,IACGA,OADH,EACGA,EAAMJ,MADT,OAEGI,QAFH,IAEGA,OAFH,EAEGA,EAAMH,QAET,uBACA,cAACvD,EAAA,EAAD,CAAMO,MAAO,CAAEmC,MAAO,QAAtB,SACE,eAAC1C,EAAA,EAAKU,MAAN,WACE,cAACV,EAAA,EAAKmE,MAAN,CAAY5D,MAAO,CAAEoC,MAAO,QAASyB,WAAY,QAAjD,+CAGA,cAACvC,EAAA,EAAD,UACGmC,EAAYK,KAAI,SAACC,EAAOC,GAAR,OACf,eAACC,EAAA,EAAD,CAAKjE,MAAO,CAAEmC,MAAO,OAArB,UACE,8BAAM6B,EAAQ,IACd,cAACvE,EAAA,EAAKY,QAAN,CACEC,KAAK,OACLE,MAAOuD,EACPtD,SAAU,SAACd,GAAD,OA/BL,SAACA,EAA+BqE,GACnDN,GAAe,SAACf,GAEd,OADAA,EAAKqB,GAASrE,EAAMgB,OAAOH,MACpB,YAAImC,MAEba,GAAS,SAACb,GACR,IAAMuB,EAAWvB,EAAKwB,QAAQL,KAAI,SAACM,GAAD,OAAa,KAE/C,OADAF,EAASF,IAAS,EACXE,KAuB0BG,CAAa1E,EAAOqE,IACzCM,YAAWf,EAAMS,OANcA,GAAQ,IAAIO,MAAOC,gBAW1D,uBACA,cAACvF,EAAA,EAAD,CAAQwF,QAAQ,UAAUnE,KAAK,SAASpB,QAxE5B,SAACS,GACnB4B,EAAI,GACJI,EAAM+C,wBAXCjB,EAAYkB,QACjB,SAACC,EAAsBC,EAAgBb,GAAvC,OACEP,EAAYO,KAAWb,EAAKF,eAAee,GACvCY,EAAuB,EACvBA,IACN,IAQF,IAAME,EAAWjF,aAAauB,QAAQ,QAEtC,GAAIvB,aAAauB,QAAQ,cAAe,CACtC,IAAM2D,EAAQlF,aAAauB,QAAQ,cAC7B4D,EAAuB,OAAVD,EAAiBE,KAAKC,MAAMH,GAAS,KAEnDC,EAAWlB,KAAI,SAACqB,GAAD,OAAiBA,EAAO,MAAIC,SAASN,IACvDE,EAAWK,KAAK,CAACP,EAAUnD,EAAMiD,uBAE9BI,EAAWlB,KAAI,SAACqB,GAAD,OAAiBA,EAAO,MAAIC,SAASzD,EAAMU,SAC7D2C,EAAWK,KAAK,CAAC1D,EAAMU,OAAQV,EAAM2D,cAGvCN,EACEA,EAAWO,WAAU,SAACJ,GAAD,OAAiBA,EAAO,KAAOL,MACpD,KAAOnD,EAAMiD,qBACfI,EACEA,EAAWO,WAAU,SAACJ,GAAD,OAAiBA,EAAO,KAAOxD,EAAMU,WAC1D,KAAOV,EAAM2D,YAEfzF,aAAaC,QAAQ,aAAcmF,KAAKO,UAAUR,QAC7C,CACL,IAAMA,EAAa,CACjB,CAACF,EAAUnD,EAAMiD,sBACjB,CAACjD,EAAMU,OAAQV,EAAM2D,cAEvBzF,aAAaC,QAAQ,aAAcmF,KAAKO,UAAUR,MA0C9C,6BC7EKS,EAnBC,SAAC5E,GACf,OACE,mCACE,eAACQ,EAAA,EAAD,CAAWjC,UAAU,MAArB,UACE,eAACkC,EAAA,EAAD,WACE,cAAC2C,EAAA,EAAD,UACE,cAAC,EAAD,MAGF,cAACA,EAAA,EAAD,UACE,cAAC,EAAD,CAAO1C,IAAKV,EAAKU,IAAKmE,IAAK7E,EAAK6E,WAGpC,cAAC,EAAD,CAAYnE,IAAKV,EAAKU,IAAKmE,IAAK7E,EAAK6E,Y,QC4B9BC,EAzCS,SAAC9E,GACvB,IAAMc,EAAQC,qBAAWC,GAEzB,OACE,qCACE,eAAC+D,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,qCACA,6BAAKpE,EAAMU,cAGf,gCACE,+BACE,6BAAKV,EAAMiD,uBACX,6BAAKjD,EAAM2D,sBAIjB,6BACG3D,EAAM2D,YAAc3D,EAAMiD,qBAA1B,UACMjD,EAAMU,OADZ,UAEGV,EAAM2D,cAAgB3D,EAAMiD,qBAC5B,cACA,aAEN,eAACtD,EAAA,EAAD,CAAKlC,UAAU,aAAf,UACE,cAACH,EAAA,EAAD,CAAQC,QAAS,kBAAM2B,EAAKU,IAAI,IAAInC,UAAU,gBAA9C,sBAIA,cAACH,EAAA,EAAD,CAAQC,QAAS,kBAAM2B,EAAKU,IAAI,IAAInC,UAAU,gBAA9C,qBAGA,cAAC,gBAAD,CAAeoC,GAAG,cAAlB,SACE,cAACvC,EAAA,EAAD,CAAQG,UAAU,gBAAlB,iC,eCPK4G,EA9BI,WAAO,IAAD,EACK1G,mBAAS,CAAC,sBADf,mBAChB2G,EADgB,KACRC,EADQ,KAUvB,OAPAhF,qBAAU,WACR,IAAM6D,EAAQlF,aAAauB,QAAQ,cAC7B4D,EAAuB,OAAVD,EAAiBE,KAAKC,MAAMH,GAAS,KACxDC,EAAWmB,MAAK,SAACC,EAAQC,GAAT,OAAoBA,EAAE,GAAKD,EAAE,MAC7CF,EAAUlB,KACT,IAGD,eAAC3D,EAAA,EAAD,CAAWjC,UAAU,MAArB,UACE,oCACG6G,QADH,IACGA,OADH,EACGA,EAAQnC,KAAI,SAACqB,GAAD,OACX,+BACE,+BAAuBA,EAAO,IAAnBA,EAAO,IADpB,IAC2C,+BAAOA,EAAO,OADhDA,EAAO,SAKpB,cAAC,gBAAD,CAAe3D,GAAG,IAAlB,SACE,cAACF,EAAA,EAAD,CAAKlC,UAAU,aAAf,SACE,cAACH,EAAA,EAAD,CAAQqB,KAAK,SAASlB,UAAU,+BAAhC,kCCjBGyC,EAAUyE,IAAMC,cAAmB,IA8CjCC,EA5CO,WAAO,IAAD,EACAlH,mBAAS,GADT,mBACnBC,EADmB,KACZC,EADY,OAE8BF,mBAAS,GAFvC,mBAEnBsF,EAFmB,KAEGF,EAFH,OAGEpF,qBAHF,mBAGnB+C,EAHmB,KAGXP,EAHW,OAIYxC,qBAJZ,mBAInBgG,EAJmB,KAIN3B,EAJM,KAiB1B,OACE,cAAC,gBAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8C,KAAK,cAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC5E,EAAQ6E,SAAT,CACElG,MAAO,CACLoE,uBACAF,0BACArC,SACAP,YACAwD,cACA3B,kBAPJ,SAUE,cAACtC,EAAA,EAAD,CAAWjC,UAAU,oCAArB,SA5BO,WACf,OAAQG,GACN,KAAK,EACH,OAAO,cAAC,EAAD,CAAYmG,IAAKnG,EAAOgC,IAAK/B,IACtC,KAAK,EACH,OAAO,cAAC,EAAD,CAASkG,IAAKnG,EAAOgC,IAAK/B,IACnC,KAAK,EACH,OAAO,cAAC,EAAD,CAAiBkG,IAAKnG,EAAOgC,IAAK/B,KAsBlCmH,eChBAC,EA7BA,WACb,OACE,qBAAKxH,UAAU,SAAf,SACE,uDCWSyH,MATf,WACE,OACE,sBAAKzH,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCGS0H,MAZf,SAAyBC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,gBAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,EAAgBc,QAAQC,S","file":"static/js/main.83b92434.chunk.js","sourcesContent":["import { changeName } from \"../../data/types\";\r\n\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Rename = (props: changeName) => {\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => {\r\n          props.setChangeName(true);\r\n        }}\r\n        className=\"button-custom\"\r\n      >\r\n        Change name\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Rename;\r\n","import { Name } from \"../../data/types\";\r\n\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\n\r\nconst NameForm = (props: Name) => {\r\n  const [state, setState] = useState(\"\");\r\n\r\n  const handleSubmit = (event: any) => {\r\n    event.preventDefault();\r\n    localStorage.setItem(\"name\", state);\r\n    props.setIsName(true);\r\n    props.setChangeName(false);\r\n    setState(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        onSubmit={handleSubmit}\r\n        style={{ marginTop: \"2%\", marginBottom: \"4%\" }}\r\n      >\r\n        <Form.Group controlId=\"controlInput1\" className=\"mb-3\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Type your name here\"\r\n            value={state}\r\n            onChange={(e) => setState(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button type=\"submit\">Submit</Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NameForm;\r\n","import { turn } from \"../../data/types\";\r\nimport Rename from \"../form/Rename\";\r\nimport { useState, useEffect } from \"react\";\r\nimport NameForm from \"../form/NameForm\";\r\nimport { Button, Container, Row } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst InitialBox = (turn: turn) => {\r\n  const [playerName, setPlayerName] = useState<string | null>();\r\n  const [isName, setIsName] = useState(false);\r\n  const [changeName, setChangeName] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const name = localStorage.getItem(\"name\");\r\n    setPlayerName(name);\r\n    if (name) setIsName(true);\r\n    if (changeName) setIsName(false);\r\n  }, [changeName]);\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"box\">\r\n        {isName ? (\r\n          <h3>Welcome, {playerName}!</h3>\r\n        ) : (\r\n          <Row className=\"row-custom\">\r\n            <NameForm setIsName={setIsName} setChangeName={setChangeName} />\r\n          </Row>\r\n        )}\r\n\r\n        <Row className=\"row-custom\">\r\n          <Button onClick={() => turn.set(2)} className=\"start-button\">\r\n            Start Game\r\n          </Button>\r\n        </Row>\r\n        <Row className=\"row-custom\">\r\n          {isName && <Rename setChangeName={setChangeName} />}\r\n          <LinkContainer to=\"/Statistics\">\r\n            <Button className=\"button-custom\">Statistics</Button>\r\n          </LinkContainer>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InitialBox;\r\n","export const dummies = [\r\n  \"Jonny\",\r\n  \"Karen\",\r\n  \"Lucy\",\r\n  \"Fernando\",\r\n  \"Quazipups\",\r\n  \"Hertruda\",\r\n  \"Naomy\",\r\n  \"Anjel\",\r\n];\r\n","import { useContext, useEffect } from \"react\";\r\nimport { Context } from \"../main_container/MainContainer\";\r\nimport { dummies } from \"../../data/dummies\";\r\n\r\nconst YouPlayerBox = () => {\r\n  const store = useContext(Context);\r\n\r\n  useEffect(() => {\r\n    store.setDummie(dummies[Math.floor(Math.random() * dummies.length)]);\r\n  }, [store]);\r\n  return (\r\n    <div style={{ width: \"50vw\" }}>\r\n      <h5 style={{ color: \"black\" }}>\r\n        You are playing against{\" \"}\r\n        <i>\r\n          <strong>{store.dummie}</strong>\r\n        </i>\r\n      </h5>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YouPlayerBox;\r\n","import { useEffect, useState } from \"react\";\r\nimport { turn } from \"../../data/types\";\r\n\r\nconst Timer = ({ set }: turn) => {\r\n  const [time, setTime] = useState(180);\r\n\r\n  useEffect(() => {\r\n    const timer = (inter: NodeJS.Timeout) => {\r\n      setTime((prev) => prev - 1);\r\n    };\r\n\r\n    const inter: NodeJS.Timeout = setInterval(() => timer(inter), 1000);\r\n    if (time === 0) set(3);\r\n    return () => clearInterval(inter);\r\n  }, [time, set]);\r\n\r\n  return (\r\n    <h4>\r\n      {`${Math.floor(time / 60)}`.padStart(2, \"0\") +\r\n        \":\" +\r\n        `${Math.floor(time % 60)}`.padStart(2, \"0\")}\r\n    </h4>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","export const tasks = [\r\n  {\r\n    title: <h5> A bicycle you can fold up</h5>,\r\n    html: `\r\n\r\n\r\n        Folding bicycles have (0) ......... around for quite some time now.\r\n        However, an amazing new Japanese version (1) ......... be folded with a\r\n        swiftness and efficiency never seen before. This bike is designed (2)\r\n        ......... that it is possible to fold it up quickly. Once folded, you\r\n        pull the bike along (3)... ease. This remarkable bike has a half-folding\r\n        frame with a hinge in the middle. And, although the basic idea is (4)\r\n        ......... original, its inventor has created an especially clever\r\n        variation, combining compactness (5) sax convenience with smart design.\r\n        Recently, folding bicycles (6) ......... become very popular in Japan,\r\n        particularly in congested urban areas like Tokyo, a city (7) .........\r\n        every square centimetre of space is in great demand. Japanese cyclists\r\n        need to be able to store their bikes in tiny areas at home or the\r\n        office. And (8) ......... they should want to take their bicycle on the\r\n        underground, a folding model is a big advantage.\r\n     `,\r\n    correctAnswers: [\"can\", \"so\", \"with\", \"not\", \"and\", \"have\", \"where\", \"if\"],\r\n  },\r\n  {\r\n    title: <h5> Animal Language</h5>,\r\n    html: `\r\n        It (0) 0... sometimes said that animals use language. Certainly some\r\n        animal species have developed amazingly sophisticated ways of\r\n        communicating with (1) ......... another. But there are huge differences\r\n        between the ways animals communicate and the ways human beings do. When\r\n        animals make a sound, such (2) ......... a bark or a call, it is in\r\n        reaction to (3) ......... is happening around them. An alarm call means\r\n        they are frightened. A hunger call means they want food. Animals,\r\n        though, cannot make a call meaning ‘I was scared yesterday’ or ‘I'll be\r\n        hungry tomorrow: Only human beings are capable (4) ......... doing this.\r\n        Zoologists have had some success in teaching human language to animals.\r\n        (5) ......... some famous experiments, chimpanzees have (6) .........\r\n        taught to use their hands to give information on a range of things. Some\r\n        animals have even managed to put signs together in (7) ......... to make\r\n        simple sentences. However, getting them to do this takes a huge (8)\r\n        ......... of training.\r\n      `,\r\n    correctAnswers: [\r\n      \"one\",\r\n      \"as\",\r\n      \"what\",\r\n      \"of\",\r\n      \"in\",\r\n      \"been\",\r\n      \"order\",\r\n      \"amount\",\r\n    ],\r\n  },\r\n];\r\n","import { SyntheticEvent, useEffect, useState, useContext } from \"react\";\r\nimport { tasks } from \"../../data/tasks\";\r\nimport { Container, Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport { turn } from \"../../data/types\";\r\nimport { Context } from \"../main_container/MainContainer\";\r\n\r\nconst TaskItself = ({ set }: turn) => {\r\n  const [task, setTask] = useState<any>();\r\n  const [focus, setFocus] = useState<boolean[]>([...new Array(8).fill(false)]);\r\n  const [inputValues, setInputValues] = useState<string[]>([\r\n    ...new Array(8).fill(\"\"),\r\n  ]);\r\n  const store = useContext(Context);\r\n\r\n  useEffect(() => {\r\n    setTask(tasks[Math.floor(Math.random() * tasks.length)]);\r\n    store.setDummieScore([Math.floor(Math.random() * 8)]);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const countScore = () => {\r\n    return inputValues.reduce(\r\n      (correctAnswersNumber, currectElement, index) =>\r\n        inputValues[index] === task.correctAnswers[index]\r\n          ? correctAnswersNumber + 1\r\n          : correctAnswersNumber,\r\n      0\r\n    );\r\n  };\r\n\r\n  const handleClick = (event: SyntheticEvent) => {\r\n    set(3);\r\n    store.setCorrectAnswersNumber(countScore());\r\n\r\n    const yourName = localStorage.getItem(\"name\");\r\n\r\n    if (localStorage.getItem(\"Statistics\")) {\r\n      const lsRaw = localStorage.getItem(\"Statistics\");\r\n      const statistics = lsRaw !== null ? JSON.parse(lsRaw) : null;\r\n\r\n      if (!statistics.map((person: any) => person[0]).includes(yourName)) {\r\n        statistics.push([yourName, store.correctAnswersNumber]);\r\n      }\r\n      if (!statistics.map((person: any) => person[0]).includes(store.dummie)) {\r\n        statistics.push([store.dummie, store.dummieScore]);\r\n      }\r\n\r\n      statistics[\r\n        statistics.findIndex((person: any) => person[0] === yourName)\r\n      ][1] -= -store.correctAnswersNumber;\r\n      statistics[\r\n        statistics.findIndex((person: any) => person[0] === store.dummie)\r\n      ][1] -= -store.dummieScore;\r\n\r\n      localStorage.setItem(\"Statistics\", JSON.stringify(statistics));\r\n    } else {\r\n      const statistics = [\r\n        [yourName, store.correctAnswersNumber],\r\n        [store.dummie, store.dummieScore],\r\n      ];\r\n      localStorage.setItem(\"Statistics\", JSON.stringify(statistics));\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: React.ChangeEvent<any>, index: number) => {\r\n    setInputValues((prev) => {\r\n      prev[index] = event.target.value;\r\n      return [...prev];\r\n    });\r\n    setFocus((prev) => {\r\n      const focusArr = prev.slice().map((element) => false);\r\n      focusArr[index] = true;\r\n      return focusArr;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"task-text-container\">\r\n        {task?.title}\r\n        {task?.html}\r\n      </div>\r\n      <hr />\r\n      <Form style={{ width: \"100%\" }}>\r\n        <Form.Group>\r\n          <Form.Label style={{ color: \"black\", fontWeight: \"bold\" }}>\r\n            Type your answers into the boxes:\r\n          </Form.Label>\r\n          <Row>\r\n            {inputValues.map((input, index) => (\r\n              <Col style={{ width: \"7vw\" }} key={index + new Date().getTime()}>\r\n                <div>{index + 1}</div>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={input}\r\n                  onChange={(event) => handleChange(event, index)}\r\n                  autoFocus={focus[index] ? true : false}\r\n                />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <hr />\r\n          <Button variant=\"primary\" type=\"button\" onClick={handleClick}>\r\n            Submit\r\n          </Button>\r\n        </Form.Group>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TaskItself;\r\n","import YouPlayerBox from \"../you_player_box/YouPlayerBox\";\r\nimport { turn } from \"../../data/types\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Timer from \"../timer/Timer\";\r\nimport TaskItself from \"../task_itself/TaskItself\";\r\n\r\nconst TaskBox = (turn: turn) => {\r\n  return (\r\n    <>\r\n      <Container className=\"box\">\r\n        <Row>\r\n          <Col>\r\n            <YouPlayerBox />\r\n          </Col>\r\n\r\n          <Col>\r\n            <Timer set={turn.set} num={turn.num} />\r\n          </Col>\r\n        </Row>\r\n        <TaskItself set={turn.set} num={turn.num} />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskBox;\r\n","import { turn } from \"../../data/types\";\r\nimport { Context } from \"../main_container/MainContainer\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Button, Table, Row } from \"react-bootstrap\";\r\nimport { useContext } from \"react\";\r\n\r\nconst BattleResultBox = (turn: turn) => {\r\n  const store = useContext(Context);\r\n\r\n  return (\r\n    <>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>You</th>\r\n            <th>{store.dummie}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>{store.correctAnswersNumber}</td>\r\n            <td>{store.dummieScore}</td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n      <h2>\r\n        {store.dummieScore > store.correctAnswersNumber\r\n          ? `${store.dummie} wins!`\r\n          : store.dummieScore === store.correctAnswersNumber\r\n          ? \"It's a draw\"\r\n          : \"You win!\"}\r\n      </h2>\r\n      <Row className=\"row-custom\">\r\n        <Button onClick={() => turn.set(2)} className=\"button-custom\">\r\n          New Game\r\n        </Button>\r\n\r\n        <Button onClick={() => turn.set(1)} className=\"button-custom\">\r\n          Restart\r\n        </Button>\r\n        <LinkContainer to=\"/Statistics\">\r\n          <Button className=\"button-custom\">Statistics</Button>\r\n        </LinkContainer>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default BattleResultBox;\r\n","import { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Button, Row, Container } from \"react-bootstrap\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Statistics = () => {\r\n  const [people, setPeople] = useState([\"no statistics yet\"]);\r\n\r\n  useEffect(() => {\r\n    const lsRaw = localStorage.getItem(\"Statistics\");\r\n    const statistics = lsRaw !== null ? JSON.parse(lsRaw) : null;\r\n    statistics.sort((a: any, b: any) => b[1] - a[1]);\r\n    setPeople(statistics);\r\n  }, []);\r\n\r\n  return (\r\n    <Container className=\"box\">\r\n      <ol>\r\n        {people?.map((person: any) => (\r\n          <li key={person[0]}>\r\n            <span key={person[0]}>{person[0]}</span> <span>{person[1]}</span>\r\n          </li>\r\n        ))}\r\n      </ol>\r\n      <LinkContainer to=\"/\">\r\n        <Row className=\"row-custom\">\r\n          <Button type=\"button\" className=\"btn button-custom non-active\">\r\n            Back to Game\r\n          </Button>\r\n        </Row>\r\n      </LinkContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import { Container } from \"react-bootstrap\";\r\nimport React, { useState } from \"react\";\r\nimport InitialBox from \"../initial_box/InitialBox\";\r\nimport TaskBox from \"../task_box/TaskBox\";\r\nimport BattleResultBox from \"../battle_result_box/BattleResultBox\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Statistics from \"../your_statistics/Statistics\";\r\n\r\nexport const Context = React.createContext<any>({});\r\n\r\nconst MainContainer = () => {\r\n  const [state, setState] = useState(1);\r\n  const [correctAnswersNumber, setCorrectAnswersNumber] = useState(0);\r\n  const [dummie, setDummie] = useState<string>();\r\n  const [dummieScore, setDummieScore] = useState<number>();\r\n\r\n  const switcher = () => {\r\n    switch (state) {\r\n      case 1:\r\n        return <InitialBox num={state} set={setState} />;\r\n      case 2:\r\n        return <TaskBox num={state} set={setState} />;\r\n      case 3:\r\n        return <BattleResultBox num={state} set={setState} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/Statistics\">\r\n          <Statistics />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Context.Provider\r\n            value={{\r\n              correctAnswersNumber,\r\n              setCorrectAnswersNumber,\r\n              dummie,\r\n              setDummie,\r\n              dummieScore,\r\n              setDummieScore,\r\n            }}\r\n          >\r\n            <Container className=\"box border border-primary rounded\">\r\n              {switcher()}\r\n            </Container>\r\n          </Context.Provider>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n","const Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h3>FCE Use Of English</h3>\r\n      {/* <Navbar\r\n        bg=\"light\"\r\n        variant=\"light\"\r\n        expand=\"lg\"\r\n        className=\"border border-primary rounded navbar-custom\"\r\n      >\r\n        <Container className=\"header-container\">\r\n          <Nav className=\"me-auto \">\r\n            <LinkContainer to=\"/\">\r\n              <Nav.Link href=\"#home\">Home</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/your-statistics\">\r\n              <Nav.Link href=\"#features\">Your Statistics</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/all_players\">\r\n              <Nav.Link href=\"#pricing\">All Players</Nav.Link>\r\n            </LinkContainer>\r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n     */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import \"./App.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport MainContainer from \"./components/main_container/MainContainer\";\nimport Header from \"./components/header/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MainContainer />\n    </div>\n  );\n}\n\nexport default App;\n","function reportWebVitals(onPerfEntry: any): void {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log());\n"],"sourceRoot":""}